---
import TerminalPrefix from '../TerminalComponents/TerminalPrefix.astro';
import FormMessage from './FormMessage.astro';
---

<form id="contact-form-small" class="w-full max-w-md mx-auto space-y-3">

    <!-- Replace with your Access Key -->
    <input type="hidden" name="access_key" value="75f8b211-81aa-45c2-9c7b-c11f447d30a0">

    <!-- Name Input -->
    <div class="form-group">
        <label for="name" class="block text-terminal-400 font-kode text-sm mb-1">Name</label>
        <input 
            type="text" 
            id="name" 
            name="name" 
            required
            placeholder="Your name"
            class="w-full bg-terminal-bg-primary border border-terminal-300 text-terminal-500 font-kode p-1.5 text-sm focus:border-terminal-500 focus:outline-none focus:ring-1 focus:ring-terminal-500"
        >
    </div>

    <!-- Email Input -->
    <div class="form-group">
        <label for="email" class="block text-terminal-400 font-kode text-sm mb-1">Email</label>
        <input 
            type="email" 
            id="email" 
            name="email" 
            required
            placeholder="your@email.com"
            class="w-full bg-terminal-bg-primary border border-terminal-300 text-terminal-500 font-kode p-1.5 text-sm focus:border-terminal-500 focus:outline-none focus:ring-1 focus:ring-terminal-500"
        >
    </div>

    <!-- Message Input -->
    <div class="form-group">
        <label for="message" class="block text-terminal-400 font-kode text-sm mb-1">Message</label>
        <textarea 
            id="message" 
            name="message" 
            required
            placeholder="Your message here..."
            rows="2"
            class="w-full bg-terminal-bg-primary border border-terminal-300 text-terminal-500 font-kode p-1.5 text-sm focus:border-terminal-500 focus:outline-none focus:ring-1 focus:ring-terminal-500"
        ></textarea>
    </div>

    <!-- Honeypot Spam Protection -->
    <input type="checkbox" name="botcheck" class="hidden" style="display: none;">

    <!-- Submit Button -->
    <button 
        type="submit"
        id="submit-btn-small"
        class="px-3 py-1.5 bg-terminal-500 text-terminal-bg-primary font-uav-mono rounded hover:bg-terminal-600 transition-colors text-glow-subtle text-sm disabled:opacity-50 disabled:cursor-not-allowed"
    >
    <TerminalPrefix />SUBMIT
    </button>

</form>

<!-- Thank You Modal -->
<FormMessage 
    id="thankYouSmall"
    title="Message Sent Successfully!"
    type="success"
    heading="Thank You!"
    message="Your message has been sent successfully. I'll get back to you as soon as possible."
    buttonText="CLOSE"
/>

<!-- Error Modal -->
<FormMessage 
    id="errorSmall"
    title="Error Sending Message"
    type="error"
    heading="Oops! Something went wrong"
    message="There was an error sending your message. Please try again."
    buttonText="TRY_AGAIN"
    errorMessageId="error-message-small"
/>

<script>
    // Extend window interface for modal functions
    declare global {
        interface Window {
            openthankYouSmallModal: () => void;
            openerrorSmallModal: () => void;
        }
    }

    // Handle form submission with JavaScript
    function setupContactFormSmall() {
        const form = document.getElementById('contact-form-small') as HTMLFormElement | null;
        const submitBtn = document.getElementById('submit-btn-small') as HTMLButtonElement | null;
        const errorMessageEl = document.getElementById('error-message-small') as HTMLElement | null;
        
        if (!form || !submitBtn) return;
        
        form.addEventListener('submit', async function(e) {
            e.preventDefault(); // Prevent default form submission
            
            // Disable submit button and show loading state
            if (submitBtn) {
                submitBtn.disabled = true;
                const originalText = submitBtn.innerHTML;
                submitBtn.innerHTML = '<span class="animate-pulse">SENDING...</span>';
                
                try {
                    // Create form data and convert to JSON
                    const formData = new FormData(form);
                    const object = Object.fromEntries(formData);
                    const json = JSON.stringify(object);
                    
                    // Submit to Web3Forms API
                    const response = await fetch('https://api.web3forms.com/submit', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Accept': 'application/json'
                        },
                        body: json
                    });
                    
                    const result = await response.json();
                    
                    if (response.status === 200) {
                        // Success - show thank you modal and reset form
                        form.reset();
                        window.openthankYouSmallModal();
                    } else {
                        // Error from Web3Forms API
                        throw new Error(result.message || 'Failed to send message');
                    }
                    
                } catch (error) {
                    console.error('Form submission error:', error);
                    if (errorMessageEl) {
                        errorMessageEl.textContent = (error as Error).message || 'There was an error sending your message. Please try again.';
                    }
                    window.openerrorSmallModal();
                } finally {
                    // Re-enable submit button
                    submitBtn.disabled = false;
                    submitBtn.innerHTML = originalText;
                }
            }
        });
    }
    
    // Setup on page load and navigation
    document.addEventListener('astro:page-load', setupContactFormSmall);
</script>

<style>
    /* Add any additional component-specific styles here */
    input, textarea {
        transition: all 0.2s ease;
    }
    
    input:focus, textarea:focus {
        box-shadow: 0 0 8px rgba(var(--color-terminal-500-rgb), 0.5);
    }
    
    /* Loading animation for submit button */
    @keyframes pulse {
        0%, 100% { opacity: 1; }
        50% { opacity: 0.5; }
    }
    
    .animate-pulse {
        animation: pulse 1.5s ease-in-out infinite;
    }
</style>

---
import SidebarOptions from './SidebarOptions.astro';
import ExtraMenu from './ExtraMenu.astro';
import SidebarButton from './SidebarButton.astro';

interface Props {
  class?: string;
}

const { class: className } = Astro.props;
---

<div class:list={["sidebar-nav-container", className]}>
  <!-- Hamburger Toggle Button -->
  <SidebarButton 
    id="sidebar-toggle"
    icon="tabler:menu-2"
    position="fixed top-4 left-4 z-50"
    ariaLabel="Navigation"
  />
  
  <!-- Include the SidebarOptions component -->
  <SidebarOptions />

  <!-- Sidebar Navigation -->
  <nav
    id="sidebar-nav"
    class="fixed top-0 left-0 h-full w-64 bg-terminal-bg-secondary border-r border-terminal-300/20 transform -translate-x-full transition-transform duration-300 ease-in-out z-50"
  >
    <div class="p-6">
      <div class="mb-8 pt-16 relative flex justify-between items-center">
        <h2 class="text-lg font-bold text-terminal-bright font-uav-mono text-glow-strong">//Alec_Reimel</h2>
        <SidebarButton 
          id="sidebar-close"
          icon="tabler:x"
          position="absolute -top-2 -left-2"
          ariaLabel="Close"
        />
      </div>

      <ul class="space-y-0 font-kode divide-y divide-terminal-300/20">
        <li>
          <a href="/" class="nav-link">
            Home
          </a>
        </li>
        <li>
          <a href="/projects" class="nav-link">
            Projects
          </a>
        </li>
        <li>
            <a href="/blog" class="nav-link">
                Blog
            </a>
        </li>
        <li>
            <a href="/styleguide" class="nav-link">
                Styleguide
            </a>
        </li>
        <li>
          <a href="/contact" class="nav-link">
            Contact
          </a>
        </li>
      </ul>
    </div>
  </nav>

  <!-- Overlay -->
  <div
    id="sidebar-overlay"
    class="fixed inset-0 bg-terminal-bg-primary/50 backdrop-blur-sm opacity-0 pointer-events-none transition-opacity duration-300 ease-in-out z-30"
  >
  </div>

  <!-- Extra Menu Layer -->
 <!--  <div 
    id="extra-menu-container" 
    class="fixed inset-0 z-35 opacity-0 pointer-events-none transition-opacity duration-300 ease-in-out flex items-center justify-center p-24 pl-72 z-40"
  >
    <ExtraMenu />
  </div> -->
</div>

<script>
  function setupSidebar() {
    const toggle = document.getElementById('sidebar-toggle');
    const closeBtn = document.getElementById('sidebar-close');
    const nav = document.getElementById('sidebar-nav');
    const overlay = document.getElementById('sidebar-overlay');
    const extraMenu = document.getElementById('extra-menu-container');
    let isOpen = false;

    function toggleSidebar() {
      isOpen = !isOpen;
      
      if (isOpen) {
        nav?.classList.remove('-translate-x-full');
        overlay?.classList.remove('opacity-0', 'pointer-events-none');
        extraMenu?.classList.remove('opacity-0', 'pointer-events-none');
        toggle?.classList.add('invisible', '-z-10');
      } else {
        nav?.classList.add('-translate-x-full');
        overlay?.classList.add('opacity-0', 'pointer-events-none');
        extraMenu?.classList.add('opacity-0', 'pointer-events-none');
        toggle?.classList.remove('invisible', '-z-10');
      }
    }

    toggle?.addEventListener('click', toggleSidebar);
    closeBtn?.addEventListener('click', toggleSidebar);
    overlay?.addEventListener('click', () => {
      if (isOpen) toggleSidebar();
    });

    // Close sidebar on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && isOpen) toggleSidebar();
    });
  }

  // Handle both initial load and subsequent navigation
  document.addEventListener('astro:page-load', setupSidebar);
</script>

<style>
  /* Navigation link styling */
  :global(.nav-link) {
    @apply block text-xl md:text-2xl text-terminal-500 hover:text-terminal-bright transition-all duration-200 py-3 px-4 -mx-4 hover:bg-terminal-bg-accent border-l-2 border-transparent hover:border-terminal-bright;
  }

  /* Add glow effect to navigation links on hover */
  :global(.nav-link:hover) {
    text-shadow: var(--theme-glow);
  }
</style> 
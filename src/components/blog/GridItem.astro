---
import { APP_BLOG } from 'astrowind:config';
import type { Post } from '~/types';

import { findImage } from '~/utils/images';
import { getPermalink } from '~/utils/permalinks';

export interface Props {
  post: Post;
}

const { post } = Astro.props;
const image = await findImage(post.image);

const link = APP_BLOG?.post?.isEnabled ? getPermalink(post.permalink, 'post') : '';

// Handle both string paths and ImageMetadata objects
const imageSrc = typeof image === 'string' ? image : image?.src;
---

<article
  class="mb-6 transition intersect-once intersect-quarter motion-safe:md:opacity-0 motion-safe:md:intersect:animate-fade"
>
  <div class="relative md:h-64 bg-gray-400 dark:bg-slate-700 rounded shadow-lg mb-6">
    {
      image &&
        (link ? (
          <a href={link}>
            <img
              src={imageSrc}
              class="w-full md:h-full rounded shadow-lg bg-gray-400 dark:bg-slate-700 object-cover"
              alt={post.title}
              loading="lazy"
              decoding="async"
            />
          </a>
        ) : (
          <img
            src={imageSrc}
            class="w-full md:h-full rounded shadow-lg bg-gray-400 dark:bg-slate-700 object-cover"
            alt={post.title}
            loading="lazy"
            decoding="async"
          />
        ))
    }
  </div>

  <h3 class="text-xl sm:text-2xl font-bold leading-tight mb-2 font-heading dark:text-slate-300">
    {
      link ? (
        <a class="inline-block hover:text-primary dark:hover:text-blue-700 transition ease-in duration-200" href={link}>
          {post.title}
        </a>
      ) : (
        post.title
      )
    }
  </h3>

  <p class="text-muted dark:text-slate-400 text-lg">{post.excerpt}</p>
</article>
